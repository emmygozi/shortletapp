name: Build and Push Docker Image to GCR

on:
  push:
    branches:
      - main # or the branch you want to trigger the workflow

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to Google Container Registry
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Configure Docker for Google Container Registry
      run: |
        gcloud auth configure-docker

    - name: Get the short commit SHA
      id: vars
      run: echo "IMAGE_TAG=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

    - name: Save image tag artifact
      id: save-tag
      run: echo "${{ env.IMAGE_TAG }}" > image-tag.txt

    - name: Build and push Docker image
      run: |
        # Build the Docker image with a unique tag
        docker build -f currentTimeAPI/Dockerfile -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/shortletapp:${{ env.IMAGE_TAG }} currentTimeAPI
        
        # Push the Docker image to GCR
        docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/shortletapp:${{ env.IMAGE_TAG }}

    - name: Clean up
      run: docker system prune -af

    - name: Upload image tag
      uses: actions/upload-artifact@v3
      with:
        name: image-tag
        path: image-tag.txt
  
  terraform-apply:
    name: Terraform Setup and Apply
    runs-on: ubuntu-latest
    needs: build-and-push 

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download image tag
        uses: actions/download-artifact@v3
        with:
          name: image-tag
          path: ./ 

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.9.5
          terraform_wrapper: false

      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v1'
        with:
          service_account: ${{ secrets.GCP_SERVICE_ACC }}
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v0.6.0'


      - name: 'Get ENV'
        run: echo "IMAGE_TAG=$(cat image-tag.txt)" >> $GITHUB_ENV
      
      - name: Directory Content and Values yml
        id: replace
        working-directory: helm-chart
        shell: bash
        run: |
          set -x # Enable debugging
          ls
          echo "Replacing GCP_PROJECT_ID with: ${{ secrets.GCP_PROJECT_ID }}"
          echo "Replacing TAG with: $(cat image-tag.txt)"
          sed -i "s/{{GCP_PROJECT_ID}}/${{ secrets.GCP_PROJECT_ID }}/g" values.yaml
          sed -i "s/{{IMAGE_TAG}}/${{ env.IMAGE_TAG }}/g" values.yaml
          # sed -i "s|repository: 'gcr.io/{{GCP_PROJECT_ID}}/shortletapp:latest' | repository: 'gcr.io/${{ secrets.GCP_PROJECT_ID }}/shortletapp:${{ env.IMAGE_TAG }}'|g" values.yaml
          cat values.yaml # Output the contents of values.yaml after replacement
          

      - name: Terraform Init
        id: init
        working-directory: GKE_IAC
        shell: bash
        env:
          TF_VAR_project_id: ${{ secrets.PROJECT_ID }}
        run: |
          ls
          terraform init
          terraform init -upgrade

      - name: Terraform Plan
        id: plan
        working-directory: GKE_IAC
        shell: bash
        run: |
          echo 'plan<<EOF' >> $GITHUB_OUTPUT
          terraform plan -no-color -out=tfplan >> $GITHUB_OUTPUT
          echo 'EOF' >> $GITHUB_OUTPUT
          terraform show -json tfplan > tfplan.json

      - name: Save Artifact
        id: save-artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ inputs.pr_id }}-tf-plan
          path: GKE_IAC/tfplan
             

      - name: Install conftest
        run: |
          LATEST_VERSION=$(wget -O - "https://api.github.com/repos/open-policy-agent/conftest/releases/latest" | grep '"tag_name":' | sed -E 's/.*"([^"]+)".*/\1/' | cut -c 2-) ARCH=$(arch) SYSTEM=$(uname)
          wget "https://github.com/open-policy-agent/conftest/releases/download/v${LATEST_VERSION}/conftest_${LATEST_VERSION}_${SYSTEM}_${ARCH}.tar.gz"
          tar xzf conftest_${LATEST_VERSION}_${SYSTEM}_${ARCH}.tar.gz
          mv conftest /usr/local/bin

      - name: conftest test
        id: conftest
        run: conftest test GKE_IAC/tfplan.json

      - name: Terraform Approve
        id: approve
        working-directory: GKE_IAC
        shell: bash
        run: |
          terraform apply -auto-approve